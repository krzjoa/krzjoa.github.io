<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>R on krzjoa</title><link>/tags/r/</link><description>Recent content in R on krzjoa</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 03 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml"/><item><title>Time Series &amp; torch #1 - Training a network to compute moving average</title><link>/2020/10/03/content/post/2020-10-03-ts-and-torch-1/2020-10-03-ts-and-torch-1/</link><pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate><guid>/2020/10/03/content/post/2020-10-03-ts-and-torch-1/2020-10-03-ts-and-torch-1/</guid><description>In the previous year, I published a post, which as I hoped, was the first tutorial of the series describing how to effectively use PyTorch in Time Series Forecasting. Recently, a new exciting R package was submitted on CRAN. This great news was officially announced on the RStudio AI Blog. Yes, you mean right - the R port of PyTorch - called simply torch came into play. This encouraged me to reactivate my series, but in this time with both R and Pythonic versions.</description></item><item><title>S4 vs vctrs library - A Double Dispatch Comparision Remake</title><link>/2020/10/01/content/post/2020-10-01-s4_vs_vctrs_remake/2020-10-01-s4_vs_vctrs_remake/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>/2020/10/01/content/post/2020-10-01-s4_vs_vctrs_remake/2020-10-01-s4_vs_vctrs_remake/</guid><description>Remake About two weeks ago, I published on my blog a comparision between two possible implementation of double-dispatch: S4-based and vctrs-based. It turned out, that in my trials vctrs performed better. However, two days later I’ve got a message from Lionel Henry via comment to my commit on GitHub. He suggested, that S4 got faster in the newest versions of R.
I decided to remake this experiment and check out, if my findings are still true.</description></item><item><title>path.chain: Concise Structure for Chainable Paths</title><link>/2020/09/27/content/post/2020-09-27-path-chain/2020-09-27-path-chain/</link><pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate><guid>/2020/09/27/content/post/2020-09-27-path-chain/2020-09-27-path-chain/</guid><description>path.chain package provides an intuitive and easy-to-use system of nested objects, which represents different levels of some directory’s structure in the file system. It allows us to created a nested structure, which returns a string from every its leaf.
Look at the path.chain Sometimes one picture can say more, than a thousand words, and this is exactly the case.
Motivation I’ve been working on the ML project, when we decided to keep strcture of the input data in the YAML config.</description></item><item><title>Double dispatch in R: S4 vs vctrs</title><link>/2020/09/21/content/post/2020-09-21-s4-vs-vctrs/2020-09-21-s4-vs-vctrs/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>/2020/09/21/content/post/2020-09-21-s4-vs-vctrs/2020-09-21-s4-vs-vctrs/</guid><description>In most cases, when writing R scripts or even creating R packages, it is enough to use standard functions or S3 methods. However, there is one important field that forces us to consider &lt;strong>double dispatch&lt;/strong> question: &lt;strong>arithmetic operators&lt;/strong>.
Suppose we’d like to create a class, which fits the problem we’re currently working on. Let’s name such class &lt;strong>beer&lt;/strong>.</description></item><item><title>eponge: Keep Your Environment Clean</title><link>/2020/05/10/content/post/2020-05-10-eponge/2020-05-10-eponge/</link><pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate><guid>/2020/05/10/content/post/2020-05-10-eponge/2020-05-10-eponge/</guid><description>eponge is a small package, which facilitates selective object removal. It was released on CRAN at 23th March 2020. Initially, the package was named sponge, but during first submission trial I found out, that currently there exists the SPONGE package, availbale on BioConductor. Because of that, I decided to rename my package, changing only one letter. The package was given a new name: eponge, which simply means sponge in French.</description></item><item><title>matricks 0.8.2 available on CRAN</title><link>/2020/02/29/content/post/2020-02-29-matricks-release/2020-02-29-matricks-release/</link><pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate><guid>/2020/02/29/content/post/2020-02-29-matricks-release/2020-02-29-matricks-release/</guid><description>matricks package in 0.8.2 version has been released on CRAN! In this post I will present you, what are advantages of using matricks and how you can use it.
Creating matrices The main function the package started with is m. It’s a smart shortcut for creating matrices, especially usefull if you want to define a matrix by enumerating all the elements row-by-row. Typically, if you want to create a matrix in R, you can do it using base function called matrix.</description></item></channel></rss>